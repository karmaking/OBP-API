// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package code.obp.grpc.api

/** getBanks response
  */
@SerialVersionUID(0L)
final case class BanksJson400Grpc(
    banks: _root_.scala.collection.Seq[code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc] = _root_.scala.collection.Seq.empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[BanksJson400Grpc] with scalapb.lenses.Updatable[BanksJson400Grpc] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      banks.foreach(banks => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(banks.serializedSize) + banks.serializedSize)
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      banks.foreach { __v =>
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): code.obp.grpc.api.BanksJson400Grpc = {
      val __banks = (_root_.scala.collection.immutable.Vector.newBuilder[code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc] ++= this.banks)
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __banks += _root_.scalapb.LiteParser.readMessage(_input__, code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc.defaultInstance)
          case tag => _input__.skipField(tag)
        }
      }
      code.obp.grpc.api.BanksJson400Grpc(
          banks = __banks.result()
      )
    }
    def clearBanks = copy(banks = _root_.scala.collection.Seq.empty)
    def addBanks(__vs: code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc*): BanksJson400Grpc = addAllBanks(__vs)
    def addAllBanks(__vs: TraversableOnce[code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc]): BanksJson400Grpc = copy(banks = banks ++ __vs)
    def withBanks(__v: _root_.scala.collection.Seq[code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc]): BanksJson400Grpc = copy(banks = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => banks
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(banks.map(_.toPMessage)(_root_.scala.collection.breakOut))
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = code.obp.grpc.api.BanksJson400Grpc
}

object BanksJson400Grpc extends scalapb.GeneratedMessageCompanion[code.obp.grpc.api.BanksJson400Grpc] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[code.obp.grpc.api.BanksJson400Grpc] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): code.obp.grpc.api.BanksJson400Grpc = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    code.obp.grpc.api.BanksJson400Grpc(
      __fieldsMap.getOrElse(__fields.get(0), Nil).asInstanceOf[_root_.scala.collection.Seq[code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[code.obp.grpc.api.BanksJson400Grpc] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      code.obp.grpc.api.BanksJson400Grpc(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.collection.Seq[code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc]]).getOrElse(_root_.scala.collection.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ApiProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ApiProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq[_root_.scalapb.GeneratedMessageCompanion[_]](
    _root_.code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc,
    _root_.code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc
  )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = code.obp.grpc.api.BanksJson400Grpc(
  )
  @SerialVersionUID(0L)
  final case class BankRoutingJsonV121Grpc(
      scheme: _root_.scala.Predef.String = "",
      address: _root_.scala.Predef.String = ""
      ) extends scalapb.GeneratedMessage with scalapb.Message[BankRoutingJsonV121Grpc] with scalapb.lenses.Updatable[BankRoutingJsonV121Grpc] {
      @transient
      private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
      private[this] def __computeSerializedValue(): _root_.scala.Int = {
        var __size = 0
        if (scheme != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, scheme) }
        if (address != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, address) }
        __size
      }
      final override def serializedSize: _root_.scala.Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = scheme
          if (__v != "") {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = address
          if (__v != "") {
            _output__.writeString(2, __v)
          }
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc = {
        var __scheme = this.scheme
        var __address = this.address
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __scheme = _input__.readString()
            case 18 =>
              __address = _input__.readString()
            case tag => _input__.skipField(tag)
          }
        }
        code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc(
            scheme = __scheme,
            address = __address
        )
      }
      def withScheme(__v: _root_.scala.Predef.String): BankRoutingJsonV121Grpc = copy(scheme = __v)
      def withAddress(__v: _root_.scala.Predef.String): BankRoutingJsonV121Grpc = copy(address = __v)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = scheme
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = address
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(scheme)
          case 2 => _root_.scalapb.descriptors.PString(address)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion = code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc
  }
  
  object BankRoutingJsonV121Grpc extends scalapb.GeneratedMessageCompanion[code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc(
        __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
        __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[_root_.scala.Predef.String]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = code.obp.grpc.api.BanksJson400Grpc.javaDescriptor.getNestedTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = code.obp.grpc.api.BanksJson400Grpc.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc(
    )
    implicit class BankRoutingJsonV121GrpcLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc](_l) {
      def scheme: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.scheme)((c_, f_) => c_.copy(scheme = f_))
      def address: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.address)((c_, f_) => c_.copy(address = f_))
    }
    final val SCHEME_FIELD_NUMBER = 1
    final val ADDRESS_FIELD_NUMBER = 2
  }
  
  @SerialVersionUID(0L)
  final case class BankJson400Grpc(
      id: _root_.scala.Predef.String = "",
      shortName: _root_.scala.Predef.String = "",
      fullName: _root_.scala.Predef.String = "",
      logo: _root_.scala.Predef.String = "",
      website: _root_.scala.Predef.String = "",
      bankRoutings: _root_.scala.collection.Seq[code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc] = _root_.scala.collection.Seq.empty
      ) extends scalapb.GeneratedMessage with scalapb.Message[BankJson400Grpc] with scalapb.lenses.Updatable[BankJson400Grpc] {
      @transient
      private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
      private[this] def __computeSerializedValue(): _root_.scala.Int = {
        var __size = 0
        if (id != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, id) }
        if (shortName != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, shortName) }
        if (fullName != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, fullName) }
        if (logo != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, logo) }
        if (website != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, website) }
        bankRoutings.foreach(bankRoutings => __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(bankRoutings.serializedSize) + bankRoutings.serializedSize)
        __size
      }
      final override def serializedSize: _root_.scala.Int = {
        var read = __serializedSizeCachedValue
        if (read == 0) {
          read = __computeSerializedValue()
          __serializedSizeCachedValue = read
        }
        read
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = id
          if (__v != "") {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = shortName
          if (__v != "") {
            _output__.writeString(2, __v)
          }
        };
        {
          val __v = fullName
          if (__v != "") {
            _output__.writeString(3, __v)
          }
        };
        {
          val __v = logo
          if (__v != "") {
            _output__.writeString(4, __v)
          }
        };
        {
          val __v = website
          if (__v != "") {
            _output__.writeString(5, __v)
          }
        };
        bankRoutings.foreach { __v =>
          _output__.writeTag(6, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        };
      }
      def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc = {
        var __id = this.id
        var __shortName = this.shortName
        var __fullName = this.fullName
        var __logo = this.logo
        var __website = this.website
        val __bankRoutings = (_root_.scala.collection.immutable.Vector.newBuilder[code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc] ++= this.bankRoutings)
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __id = _input__.readString()
            case 18 =>
              __shortName = _input__.readString()
            case 26 =>
              __fullName = _input__.readString()
            case 34 =>
              __logo = _input__.readString()
            case 42 =>
              __website = _input__.readString()
            case 50 =>
              __bankRoutings += _root_.scalapb.LiteParser.readMessage(_input__, code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc.defaultInstance)
            case tag => _input__.skipField(tag)
          }
        }
        code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc(
            id = __id,
            shortName = __shortName,
            fullName = __fullName,
            logo = __logo,
            website = __website,
            bankRoutings = __bankRoutings.result()
        )
      }
      def withId(__v: _root_.scala.Predef.String): BankJson400Grpc = copy(id = __v)
      def withShortName(__v: _root_.scala.Predef.String): BankJson400Grpc = copy(shortName = __v)
      def withFullName(__v: _root_.scala.Predef.String): BankJson400Grpc = copy(fullName = __v)
      def withLogo(__v: _root_.scala.Predef.String): BankJson400Grpc = copy(logo = __v)
      def withWebsite(__v: _root_.scala.Predef.String): BankJson400Grpc = copy(website = __v)
      def clearBankRoutings = copy(bankRoutings = _root_.scala.collection.Seq.empty)
      def addBankRoutings(__vs: code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc*): BankJson400Grpc = addAllBankRoutings(__vs)
      def addAllBankRoutings(__vs: TraversableOnce[code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc]): BankJson400Grpc = copy(bankRoutings = bankRoutings ++ __vs)
      def withBankRoutings(__v: _root_.scala.collection.Seq[code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc]): BankJson400Grpc = copy(bankRoutings = __v)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = id
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = shortName
            if (__t != "") __t else null
          }
          case 3 => {
            val __t = fullName
            if (__t != "") __t else null
          }
          case 4 => {
            val __t = logo
            if (__t != "") __t else null
          }
          case 5 => {
            val __t = website
            if (__t != "") __t else null
          }
          case 6 => bankRoutings
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(id)
          case 2 => _root_.scalapb.descriptors.PString(shortName)
          case 3 => _root_.scalapb.descriptors.PString(fullName)
          case 4 => _root_.scalapb.descriptors.PString(logo)
          case 5 => _root_.scalapb.descriptors.PString(website)
          case 6 => _root_.scalapb.descriptors.PRepeated(bankRoutings.map(_.toPMessage)(_root_.scala.collection.breakOut))
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion = code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc
  }
  
  object BankJson400Grpc extends scalapb.GeneratedMessageCompanion[code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc] = this
    def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc = {
      require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
      val __fields = javaDescriptor.getFields
      code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc(
        __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
        __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[_root_.scala.Predef.String],
        __fieldsMap.getOrElse(__fields.get(2), "").asInstanceOf[_root_.scala.Predef.String],
        __fieldsMap.getOrElse(__fields.get(3), "").asInstanceOf[_root_.scala.Predef.String],
        __fieldsMap.getOrElse(__fields.get(4), "").asInstanceOf[_root_.scala.Predef.String],
        __fieldsMap.getOrElse(__fields.get(5), Nil).asInstanceOf[_root_.scala.collection.Seq[code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc]]
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
        code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc(
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.collection.Seq[code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc]]).getOrElse(_root_.scala.collection.Seq.empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = code.obp.grpc.api.BanksJson400Grpc.javaDescriptor.getNestedTypes.get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = code.obp.grpc.api.BanksJson400Grpc.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 6 => __out = code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc(
    )
    implicit class BankJson400GrpcLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc](_l) {
      def id: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.id)((c_, f_) => c_.copy(id = f_))
      def shortName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.shortName)((c_, f_) => c_.copy(shortName = f_))
      def fullName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.fullName)((c_, f_) => c_.copy(fullName = f_))
      def logo: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.logo)((c_, f_) => c_.copy(logo = f_))
      def website: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.website)((c_, f_) => c_.copy(website = f_))
      def bankRoutings: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.Seq[code.obp.grpc.api.BanksJson400Grpc.BankRoutingJsonV121Grpc]] = field(_.bankRoutings)((c_, f_) => c_.copy(bankRoutings = f_))
    }
    final val ID_FIELD_NUMBER = 1
    final val SHORT_NAME_FIELD_NUMBER = 2
    final val FULL_NAME_FIELD_NUMBER = 3
    final val LOGO_FIELD_NUMBER = 4
    final val WEBSITE_FIELD_NUMBER = 5
    final val BANK_ROUTINGS_FIELD_NUMBER = 6
  }
  
  implicit class BanksJson400GrpcLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, code.obp.grpc.api.BanksJson400Grpc]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, code.obp.grpc.api.BanksJson400Grpc](_l) {
    def banks: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.Seq[code.obp.grpc.api.BanksJson400Grpc.BankJson400Grpc]] = field(_.banks)((c_, f_) => c_.copy(banks = f_))
  }
  final val BANKS_FIELD_NUMBER = 1
}
